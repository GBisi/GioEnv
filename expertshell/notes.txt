- Per testare l'EaaS collegarsi all'indirizzo 131.114.73.148 porta 1999. Come body un file json con una lista "facts" e una "rules".

- Esempio d'uso: 

{
	"facts":"[temperature(very_low),light(high)]",
	"rules":"[ rule([ temperature(very_low) ] , [ do(set_temperature(high)) ]), rule([ temperature(low), outdoor_temperature(very_low) ] , [ do(set_temperature(high)) ]), rule([ temperature(high), outdoor_temperature(very_high) ] , [ do(set_temperature(low)) ]), rule([ temperature(very_high) ] , [ do(set_temperature(low)) ]), rule([ light(low), outdoor_light(medium) ] , [ do(set_light(medium)) ]), rule([ light(low), outdoor_light(low) ] , [ do(set_light(high)) ]), rule([ light(medium), outdoor_light(low) ] , [ do(set_light(high)) ]), rule([ light(medium), outdoor_light(high) ] , [ do(set_light(medium)) ]), rule([ light(high), outdoor_light(high) ] , [ do(set_light(medium)) ]), rule([ light(high), outdoor_light(medium) ] , [ do(set_light(medium)) ]) ]"
}

- Per verificare la differenza tra i due sistemi (expertS e newexpert) usa consult('rulebook.pl'),test(F,R). 

**************************** OLD ***************************************
Ecco una serie di appunti a commento del codice:
- i file rules-*.pl sono solo i "compilati" degli analoghi txt e contengono solo le regole, la logica è expert.pl e mediator.pl
- le regole dei sistemi, sopratutto per quanto riguarda il mediatore, sono appena abbozzate giusto epr effettuare i test.
- le regole del sistema "Es" le ho create per simulare l'interazione con un utente. In produzione saranno sostituite da auelle dei singoli utenti + gestione dei conflitti
-il retractall commentato 
- in expert.pl compute è l'analogo di solve. La differenza è che compute restituisce i risultati solve no.
- per far funzionare compute ho dovuto aggiungere retractall e assertz, che nella versione "ufficiale" non ci stanno
- retractall penso serva, ma non funziona in problog ed in effetti per l'utilizzo che ne faccio potrebbeessere inutile. Infatti serve se si fanno più chiamate di solve/compute, ma per come utilizzo il sistema per ogni chiamata si rinizia da capo, e se si risolve con solve allora non serve sicuramente
- mediator per ora è implementato come un particolare sistema esperto, ma non sono convinto di questa forma, volendo si può trasformare in un qualcosa di diverso
- in mediator.pl sarebbe interessante riuscire a creare un'unica funzione di parsing (remapping) passondogli in input il predicato che incapsula gli elementi